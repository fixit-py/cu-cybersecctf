#!/bin/bash

# Secure Docker deployment script for CTF challenge
# Usage: ./secure_run_script.sh [PORT] [CONTAINER_NAME]

PORT=${1:-1337}
CONTAINER_NAME=${2:-"deepsea-challenge-${PORT}"}
IMAGE_NAME="deepsea-research:${PORT}"

# Validate port number
if ! [[ "$PORT" =~ ^[0-9]+$ ]] || [ "$PORT" -lt 1024 ] || [ "$PORT" -gt 65535 ]; then
    echo "Error: Port must be a number between 1024 and 65535"
    echo "Usage: $0 [PORT] [CONTAINER_NAME]"
    exit 1
fi

# Check if image already exists
if docker image inspect "$IMAGE_NAME" >/dev/null 2>&1; then
    echo "Using existing image: $IMAGE_NAME"
else
    echo "Building image: $IMAGE_NAME"
    docker build -t "$IMAGE_NAME" .
    if [ $? -ne 0 ]; then
        echo "✗ Failed to build image"
        exit 1
    fi
fi

echo "Running container on port $PORT with name $CONTAINER_NAME..."
docker run -d \
  --name "$CONTAINER_NAME" \
  -p "$PORT:1337" \
  --restart unless-stopped \
  --security-opt no-new-privileges:true \
  --security-opt seccomp:unconfined \
  --cap-drop ALL \
  --cap-add SETUID \
  --cap-add SETGID \
  --read-only \
  --tmpfs /tmp:rw,noexec,nosuid,size=100m \
  --tmpfs /var/tmp:rw,noexec,nosuid,size=50m \
  --memory="256m" \
  --memory-swap="256m" \
  --cpus="0.5" \
  --pids-limit 50 \
  --ulimit nproc=50:50 \
  --ulimit nofile=1024:1024 \
  --user 1000:1000 \
  "$IMAGE_NAME"

if [ $? -eq 0 ]; then
    echo "✓ Container started successfully!"
    echo "  Port: $PORT"
    echo "  Container: $CONTAINER_NAME"
    echo "  Image: $IMAGE_NAME"
    echo "  Test with: nc localhost $PORT"
    echo ""
    echo "Management commands:"
    echo "  Stop: docker stop $CONTAINER_NAME"
    echo "  Remove: docker rm $CONTAINER_NAME"
    echo "  Logs: docker logs $CONTAINER_NAME"
else
    echo "✗ Failed to start container"
    exit 1
fi
